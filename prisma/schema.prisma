// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id Int @id @default(autoincrement())
  email String @unique
  hashedPassword String
  nickName String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  jobs Jobs[]
  chats Chats[]
  notifications Notifications[]
} 

model Jobs {
  id Int @id @default(autoincrement())
  location String
  startDate DateTime
  endDate DateTime
  price Int
  description String?
  userId Int
  status Boolean? // null進行中、true完了
  users Users @relation(fields: [userId], references: [id])  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  applications Applications[]
  notifications Notifications[]
  chats Chats[]
}

model Applications{
  id Int @id @default(autoincrement())
  userId Int // 求職者のID
  jobId Int
  status Boolean? // null審査中、true承諾, false不承諾
  jobs Jobs @relation(fields: [jobId], references: [id])
  createdAt DateTime @default(now()) // 応募きた日時
  updatedAt DateTime @updatedAt // 採用と不採用通知
}

model Notifications{
  id Int @id @default(autoincrement())
  userId Int
  jobId Int
  type NotificationType 
  read Boolean? // nullの場合は未読, trueの場合は既読
  jobs Jobs @relation(fields: [jobId], references: [id])
  users Users @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now()) 
  updatedAt DateTime @updatedAt 
}

enum NotificationType {
  APPLICATION // 応募
  CANCEL // 取り消し
  DELETE // 削除
  APPROVAL // 承諾
  REJECT // 不承諾
  COMPLETED // 完了
}

model Chats {
  id Int @id @default(autoincrement())
  roomId String
  userId Int
  jobId Int
  text String
  users Users @relation(fields: [userId], references: [id])  
  jobs Jobs @relation(fields: [jobId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}